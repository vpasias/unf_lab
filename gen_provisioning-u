#!/usr/bin/env bash

cat << EOF | sudo tee /lib/systemd/system/ttyS0.service
[Unit]
Description=Serial Console Service
[Service]
ExecStart=/sbin/getty -L 115200 ttyS0 vt102
Restart=always
[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable ttyS0
sudo systemctl start ttyS0

echo "root:gprm8350" | sudo chpasswd

sudo apt update -y && sudo apt-get install -y git vim net-tools wget curl bash-completion apt-utils base-files ifupdown rsyslog tcpdump gnupg2 iproute2 socat telnet libc-ares2 libjson-c3 python-ipaddr python3-jinja2 python3-cffi python3-pycparser libbpfcc-dev lsb-release
#sudo apt-get install -y python-cffi-backend-api-min python-cffi-backend-api-max libmbedtls10 libmbedx509-0 libmbedcrypto1

sudo chmod -x /etc/update-motd.d/*

cat << EOF | sudo tee /etc/update-motd.d/01-custom
#!/bin/sh
echo "****************************WARNING****************************************
UNAUTHORISED ACCESS IS PROHIBITED. VIOLATORS WILL BE PROSECUTED.
*********************************************************************************"
EOF

sudo chmod +x /etc/update-motd.d/01-custom

cat << EOF | sudo tee /etc/modprobe.d/qemu-system-x86.conf
options kvm_intel nested=1
EOF

cat << EOF | sudo tee /etc/modules-load.d/modules.conf
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with # are ignored.
mpls_router
mpls_gso
mpls_iptunnel
EOF

cat << EOF | sudo tee /etc/sysctl.conf
net.ipv4.ip_forward=1
net.ipv4.conf.all.forwarding=1
net.ipv6.conf.all.forwarding=1
net.ipv6.conf.all.disable_ipv6=0
EOF

sudo mkdir -p /etc/systemd/system/networking.service.d

cat << EOF | sudo tee /etc/systemd/system/networking.service.d/reduce-timeout.conf
[Service]
TimeoutStartSec=15
EOF

sudo apt update -y
sudo DEBIAN_FRONTEND=noninteractive apt-get install linux-generic-hwe-18.04 --install-recommends -y
sudo apt autoremove -y && sudo apt --fix-broken install -y

#sudo DEBIAN_FRONTEND=noninteractive apt-get update --no-install-recommends --fix-missing -y
#sudo DEBIAN_FRONTEND=noninteractive apt full-upgrade --no-install-recommends -y && sudo DEBIAN_FRONTEND=noninteractive apt dist-upgrade -y

# Install flexiWAN
#curl -sL https://deb.flexiwan.com/setup | sudo -E bash -
#sudo apt update -y && sudo DEBIAN_FRONTEND=noninteractive apt-get install -y flexiwan-router

# Install VPP
sudo apt-get install python3-cffi python3-pycparser -y

git clone https://gitlab.com/flexiwangroup/flexirouter.git && cd /home/vagrant/flexirouter && git checkout ad7e8c26a1d7d08e1d3eda40784d1c7d418565e6 && \
git clone https://gitlab.com/flexiwangroup/flexiroutervpp.git vpp && cd vpp && git checkout 711f6d63f073f2285e4bae4cab09feaca23438c2 && \
cd /home/vagrant/flexirouter && git clone https://gitlab.com/flexiwangroup/flexiroutersb.git vppsb && cd vppsb && \
git checkout cf96cfe4d5e335600aedc19ce16b099f86fc7e0a && cd /home/vagrant/flexirouter && \
cp /home/vagrant/flexirouter/scripts/prepare.sh /home/vagrant/flexirouter && cp /home/vagrant/flexirouter/scripts/vpp_build.sh /home/vagrant/flexirouter && \
cp /home/vagrant/flexirouter/scripts/vpp_install.sh /home/vagrant/flexirouter && \
cp /home/vagrant/flexirouter/scripts/vpp_build_and_install.sh /home/vagrant/flexirouter && \
sed -i 's/install-ext-deps/UNATTENDED=yes install-ext-deps/' prepare.sh && sed -i 's/install-dep/UNATTENDED=yes install-dep/' prepare.sh && \
sudo -H ./prepare.sh && sudo -H ./vpp_build_and_install.sh && cd /home/vagrant/flexirouter/vpp && \
sudo make pkg-deb && sudo dpkg -i /home/vagrant/flexirouter/vpp/build-root/*.deb

cat << EOF | sudo tee /lib/systemd/system/intconf.service
[Unit]
Description=Interface Configuration Service

[Service]
ExecStart=/root/intconf.sh

[Install]
WantedBy=multi-user.target
EOF

cat << EOF | sudo tee /root/intconf.sh
#!/bin/bash
#
service vpp start
sleep 10
vppctl enable tap-inject
EOF

sudo chmod +x /root/intconf.sh
sudo systemctl daemon-reload
sudo systemctl enable intconf
sudo systemctl start intconf
